******************* begin: gen_filenames.cmn ***********************
*
*-Common block with filenames
*     $Log: gen_filenames.cmn,v $
*     Revision 1.14  2003/09/05 20:10:27  jones
*     Merge in online03 changes (mkj)
*
*     Revision 1.13.2.2  2003/08/14 16:13:15  cdaq
*     Corrected mistake in setting G_LUN_WRITEOUT_SCALER ( mkj)
*
*     Revision 1.13.2.1  2003/08/14 00:44:13  cdaq
*     Modify to be able to write scaler rates for each read to a file (mkj)
*
*     Revision 1.13  2002/09/25 13:54:16  jones
*        a. change g_data_source_filename to character*120
*        b. add variable g_segment
*
*     Revision 1.12  1996/11/19 18:13:44  saw
*     (SAW) Add some filenames and variables for LUN's
*
*     Revision 1.11  1996/09/04 15:48:00  saw
*     (JRA) Add flags for writting out preproccesd (filtered) events
*
*     Revision 1.10  1996/04/30 13:37:06  saw
*     (JRA) Add filename for pedestal output
*
*     Revision 1.9  1996/01/17 15:41:50  cdaq
*     (JRA) Add filename/ctp names for tcl statistics screen
*
*     Revision 1.8  1995/09/01 13:01:16  cdaq
*     (JRA) Add a file for run number based CTP parameter (kinematics) settings
*
* Revision 1.7  1995/07/28  14:25:59  cdaq
* (SAW) Add g_ctp_database_filename
*
* Revision 1.6  1994/10/19  19:52:22  cdaq
* (SAW) Add g_label variable for labels on reports
*
* Revision 1.5  1994/08/03  20:06:50  cdaq
* (SAW) Add "CTPTYPE=parm" directive for auto generation of CTP reg calls
*
* Revision 1.4  1994/06/21  15:05:11  cdaq
* (SAW) Add g_report_rebook flag
*
* Revision 1.3  1994/06/15  18:12:17  cdaq
* (SAW) Add variables for report generator
*
* Revision 1.2  1994/03/24  16:49:57  cdaq
* (SAW) Make logical's logical*4 so they can be registered to CTP
*
* Revision 1.1  1994/02/07  19:38:11  cdaq
* Initial revision
*
*     CTPTYPE=parm
*
      integer G_LUN_CONFIG
      parameter (G_LUN_CONFIG= 55)
*
      integer G_LUN_TEMP
      parameter (G_LUN_TEMP= G_LUN_CONFIG+1)
*
      integer G_LUN_CHARGE_SCALER
      parameter (G_LUN_CHARGE_SCALER=G_LUN_TEMP+1)
*
      integer G_LUN_EPICS_OUTPUT
      parameter (G_LUN_EPICS_OUTPUT=G_LUN_CHARGE_SCALER+1)
*
      integer G_LUN_WRITEOUT_SCALER
      parameter (G_LUN_WRITEOUT_SCALER=G_LUN_EPICS_OUTPUT+1)
*

      character*80 g_config_filename
      character*80 g_ctp_hist_filename
      character*80 g_ctp_test_filename
      character*80 g_ctp_parm_filename
      character*120 g_data_source_filename	! Coda/other input file
      character*80 g_alias_filename		! PAW histogram name aliases
      character*80 g_histout_filename		! File to write histograms to
      character*80 g_decode_map_filename ! File containing unpack map
      character*80 g_report_template_filename
      character*80 g_report_output_filename
      character*80 g_report_template_sync_filename
      character*80 g_report_output_sync_filename
      character*80 g_report_blockname
      character*80 g_label              ! A string that can label reports, etc
      character*80 g_ctp_database_filename ! Run number dependent variables
      character*80 g_ctp_kinematics_filename ! Run number dependent variables
      character*80 g_stats_template_filename   !online statistics report
      character*80 g_stats_output_filename
      character*80 g_stats_blockname
      character*80 g_pedestal_output_filename
      character*80 g_bad_output_filename
      character*80 g_preproc_filename
      character*80 g_charge_scaler_filename
      character*80 g_writeout_scaler_filename
      character*80 g_epics_output_filename
*
      common /gen_filenames/
     $     g_config_filename,
     $     g_ctp_hist_filename,
     $     g_ctp_test_filename,
     $     g_ctp_parm_filename,
     $     g_data_source_filename,
     $     g_alias_filename,
     $     g_histout_filename,
     $     g_decode_map_filename,
     $     g_report_template_filename,
     $     g_report_output_filename,
     $     g_report_template_sync_filename,
     $     g_report_output_sync_filename,
     $     g_report_blockname,
     $     g_label,
     $     g_ctp_database_filename,
     $     g_ctp_kinematics_filename,
     $     g_stats_template_filename,
     $     g_stats_output_filename,
     $     g_stats_blockname,
     $     g_pedestal_output_filename,
     $     g_bad_output_filename,
     $     g_preproc_filename,
     $     g_writeout_scaler_filename,
     $     g_charge_scaler_filename,
     $     g_epics_output_filename

*
      logical*4 g_hist_rebook
      logical*4 g_test_rebook
      logical*4 g_parm_rebook
      logical*4 g_report_rebook
*
      logical*4 g_config_loaded                 !Make sure this is false first time
      logical*4 g_data_source_opened            !whether FASTBUS CODA file opened OK
      integer g_data_source_in_hndl             !IO channel assigned by CODA library
      integer g_max_events                      !quit after this number events
      logical*4 g_preproc_opened                !status of preprocessor output file opening
      integer*4 g_preproc_in_hndl               !IO channel assigned by CODA for above file
      integer*4 g_preproc_on                    !flag to turn on event preprocessing
*
      common /gen_config_flags/
     $     g_hist_rebook, g_test_rebook, g_parm_rebook,
     $     g_report_rebook,
     $     g_config_loaded,
     $     g_data_source_opened, g_data_source_in_hndl,
     $     g_max_events,
     $     g_preproc_opened,
     $     g_preproc_in_hndl,
     $     g_preproc_on

      integer*4 g_segment

      common /gen_segmented_runs/
     $     g_segment

*
*     Local Variables:
*     mode: fortran
*     End:
*
******************** end: gen_filenames.cmn ***********************

